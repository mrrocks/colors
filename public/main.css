:root {
  --black-x-light: rgba(0, 0, 0, 0.1);
  --black-light: rgba(0, 0, 0, 0.3);
  --black-medium: rgba(0, 0, 0, 0.5);
  --black-dark: rgba(0, 0, 0, 0.7);
  --black-x-dark: rgba(0, 0, 0, 0.9);
  --black: rgba(0, 0, 0, 1);
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: Inter, sans-serif;
}
html,
body {
  height: 100dvh;
  width: 100vw;
  overscroll-behavior: none;
}

body {
  display: flex;
  flex-direction: row;
  min-height: 0;
  color: var(--black-dark);
}

a,
a:link,
a:visited {
  font-weight: 500;
  color: var(--black-dark);
  text-decoration: none;
}

a:hover {
  text-decoration: none;
  color: var(--black);
}

button {
  background-color: var(--black-x-light);
  border: 0;
  padding: 4px 8px;
  border-radius: 2px;
  font-weight: 500;
  font-size: 12px;
  color: var(--black-dark);
}

input[type='number']:focus,
select:focus {
  outline: none;
  border: 1.5px solid var(--black-dark) !important;
}

input[type='checkbox'] {
  display: grid;
  place-content: center;
  flex: 0 0 20px;
  appearance: none;
  height: 20px;
  border: 1.5px solid var(--black-x-light);
  border-radius: 2px;
}

input[type='checkbox']::before {
  content: '';
  width: 10px;
  height: 8px;
  opacity: 0;
  background-image: url('data:image/svg+xml;utf8,<svg width="10" height="8" viewBox="0 0 10 8" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M9.74934 0.190402C10.0584 0.46618 10.0854 0.940286 9.80961 1.24935L4.00961 7.74935C3.87558 7.89955 3.6868 7.98957 3.48572 7.99916C3.28465 8.00874 3.08816 7.9371 2.94045 7.80033L0.240447 5.30033C-0.0634862 5.01891 -0.0817371 4.54438 0.199683 4.24045C0.481103 3.93652 0.955626 3.91827 1.25956 4.19969L3.39902 6.18066L8.6904 0.250667C8.96618 -0.058395 9.44028 -0.0853767 9.74934 0.190402Z" fill="rgba(0,0,0,0.8)"/></svg>');
  background-size: contain;
  background-repeat: no-repeat;
}

input[type='checkbox']:checked::before {
  opacity: 1;
}

select {
  color: var(--black-medium);
  border: 1.5px solid var(--black-x-light);
  border-radius: 2px;
  padding: 0 4px;
  appearance: none;
  background-color: transparent;
  background-image: url('data:image/svg+xml;utf8,<svg width="8" height="5" viewBox="0 0 8 5" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M0.198481 0.241353C0.479401 -0.0630428 0.953894 -0.0820729 1.25829 0.198847L4.00028 2.72938L6.74166 0.198898C7.04603 -0.0820529 7.52052 -0.0630703 7.80148 0.241297C8.08243 0.545664 8.06344 1.02016 7.75908 1.30111L4.50904 4.30111C4.22176 4.56628 3.77898 4.5663 3.49168 4.30116L0.240986 1.30116C-0.0634093 1.02024 -0.0824396 0.545748 0.198481 0.241353Z" fill="rgba(0,0,0,0.6)"/></svg>');
  background-size: 8px 5px;
  background-repeat: no-repeat;
  background-position: right 8px top 50%;
}

input[type='range']:focus {
  outline: none;
  background-image: linear-gradient(var(--black-x-dark), var(--black-x-dark));
}

input[type='range']:focus::-webkit-slider-thumb {
  background-color: var(--black-x-dark);
}

.header {
  flex: 1 1 40vw;
  padding: 32px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  line-height: 24px;
  height: 100dvh;
  gap: 16px;
  overflow-y: auto;
  overflow-x: hidden;
  min-width: 424px;
}

#colorGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(min(100%, 172px), 1fr));
  gap: 2px;
  overflow: auto;
  flex: 1 1 60vw;
}

#colorGrid div {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  text-transform: uppercase;
  font-weight: 500;
  font-size: 14px;
  gap: 8px;
  padding: 12px;
  text-align: center;
}

.deltas {
  font-size: 12px;
  opacity: 0.6;
  white-space: nowrap;
  margin-left: 12px;
  cursor: help;
}

.info {
  font-size: 12px;
  line-height: 20px;
  color: var(--black-medium);
}

.controls {
  display: flex;
  flex-direction: column;
  gap: 12px;
  min-width: 360px;
}

.control {
  display: flex;
  flex-direction: row;
  gap: 12px;
  font-size: 14px;
  align-items: center;
  user-select: none;
}

.control label {
  flex: 0 0 128px;
  white-space: nowrap;
  font-weight: 500;
}

.control input[type='range'] {
  flex: 1 1 auto;
  color: var(--black-medium);
}

.control input[type='number'] {
  width: 32px;
  height: 28px;
  color: var(--black-medium);
  border: 1.5px solid var(--black-x-light);
  border-radius: 2px;
  text-align: center;
}

.control input[type='number']::-webkit-outer-spin-button,
.control input[type='number']::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.control .options {
  flex: 1 1 auto;
  display: flex;
  flex-direction: row;
  gap: 12px;
}

.control.title {
  border-bottom: 1px solid var(--black-x-light);
  padding-bottom: 16px;
  margin-bottom: 4px;
}

.control.title label {
  font-size: 14px;
  font-weight: 600;
}

.export {
  flex: 1 1 auto;
  display: flex;
  flex-direction: row;
  gap: 12px;
  border-right: 1px solid var(--black-x-light);
  padding-right: 12px;
}

.export select {
  flex: 1 1 auto;
  height: 28px;
}

.color-blind {
  border-top: 1px solid var(--black-x-light);
  padding-top: 16px;
  margin-top: 4px;
}

.color-blind label {
  font-size: 12px;
  line-height: 20px;
  color: var(--black-medium);
  display: flex;
  flex-direction: row;
  align-items: start;
  gap: 8px;
  flex: 1 1 auto;
}

.color-blind label span {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.info .number {
  letter-spacing: 1px;
}

/* Range */

input[type='range'] {
  appearance: none;
  background: var(--black-x-light);
  height: 1.5px;
  border-radius: 50px;
  background-image: linear-gradient(var(--black-medium), var(--black-medium));
  background-size: 50% 100%;
  background-repeat: no-repeat;
  cursor: pointer;
}

input[type='range']::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: 12px;
  height: 12px;
  background-color: #565656;
  border-radius: 50%;
  cursor: pointer;
}

/* Media queries */

@media (max-width: 660px) {
  :root {
    --header-height: 272px;
  }
  body {
    flex-direction: column;
  }
  .header {
    flex: 1 1 auto;
    height: var(--header-height);
    min-width: auto;
  }

  .color-blind label {
    width: 100%;
  }

  #colorGrid {
    flex-basis: calc(100dvh - var(--header-height));
  }

  .controls {
    min-width: auto;
  }
  #exportButton {
    display: none;
  }
}
